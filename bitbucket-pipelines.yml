image: node:14.17.0

pipelines:
  pull-requests:
    '**': #this runs as default for any branch not elsewhere defined
      - step:
          name: Install and Test
          caches:
            - node
          script:
            - yarn install
            - yarn test --watchAll==false
      - step:
          name: Build Storybook
          caches:
            - node
          script:
            - yarn build-storybook
          artifacts:
            - storybook-static/**
      - step:
          size: 2x
          name: Publish Storybook
          caches:
            - node
          script:
            - unset CI
            - pipe: atlassian/firebase-deploy:3.0.0
              variables:
                KEY_FILE: $FIREBASE_KEY_FILE
                PROJECT_ID: $FIREBASE_PROJECT_ID
                MESSAGE: 'deploying to loplat UI'
                EXTRA_ARGS: '--only hosting:feature'
                DEBUG: 'false'
            - export COMMIT_MESSAGE=`git log --format=%B -n 1 $BITBUCKET_COMMIT`
            - export BRANCH_NAME=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
            - echo $COMMIT_MESSAGE
            - echo $BRANCH_NAME
            - curl -X POST -H "Content-type:application/json" --data "{
              \"text\":\"*$BRANCH_NAME PR이 업데이트되었습니다.* 스토리북을 확인해주세요.
              \n\n https://feature-loplat-ui.web.app/
              \n\n *개발자 커밋메시지:* $COMMIT_MESSAGE\"}" $WEBHOOK_URL
      - step:
          name: Storybook Tests on browser
          image: mcr.microsoft.com/playwright:v1.21.0
          caches:
            - node
          script:
            - npx playwright install
            - yarn test-storybook --url https://feature-loplat-ui.web.app/
  branches:
    develop:
      - step:
          name: Install and Test
          caches:
            - node
          script:
            - yarn install
            - yarn test --watchAll==false
      - step:
          name: Build Storybook
          caches:
            - node
          script:
            - yarn build-storybook
          artifacts: # defining the artifacts to be passed to each future step.
            - storybook-static/**
      - step:
          size: 2x
          name: Publish Storybook
          caches:
            - node
          script:
            - unset CI
            - pipe: atlassian/firebase-deploy:3.0.0
              variables:
                KEY_FILE: $FIREBASE_KEY_FILE
                PROJECT_ID: $FIREBASE_PROJECT_ID
                MESSAGE: 'deploying to loplat UI'
                EXTRA_ARGS: '--only hosting:staging'
                DEBUG: 'false'
            - curl -X POST -H "Content-type:application/json" --data "{
              \"text\":\"*loplat ui develop 브랜치가 배포되었습니다.*
              \n\n https://staging-loplat-ui.web.app/\"}" $WEBHOOK_URL
      - step:
          name: Storybook Tests on browser
          image: mcr.microsoft.com/playwright:v1.21.0
          caches:
            - node
          script:
            - npx playwright install
            - yarn test-storybook --url https://staging-loplat-ui.web.app/
    main:
      - step:
          name: Install and Test
          caches:
            - node
          script:
            - yarn install
            - yarn test --watchAll==false
      - step:
          name: Build Storybook
          caches:
            - node
          script:
            - yarn build-storybook
          artifacts: # defining the artifacts to be passed to each future step.
            - storybook-static/**
      - step:
          size: 2x
          name: Publish Storybook
          caches:
            - node
          script:
            - unset CI
            - pipe: atlassian/firebase-deploy:3.0.0
              variables:
                KEY_FILE: $FIREBASE_KEY_FILE
                PROJECT_ID: $FIREBASE_PROJECT_ID
                MESSAGE: 'deploying to loplat UI'
                EXTRA_ARGS: '--only hosting:production'
                DEBUG: 'false'
            - export VERSION=$(yarn version | grep version | awk -F":" '{ print $2 }' | sed '/^$/d' | tr -d ' ')
            - echo $VERSION
            - curl -X POST -H "Content-type:application/json" --data "{
              \"text\":\"*loplat ui $VERSION 버전이 배포되었습니다.*
              \n\n https://ui.loplat.com/ \"}" $WEBHOOK_URL
      - step:
          name: Storybook Tests on browser
          image: mcr.microsoft.com/playwright:v1.21.0
          caches:
            - node
          script:
            - npx playwright install
            - yarn test-storybook --url https://ui.loplat.com
